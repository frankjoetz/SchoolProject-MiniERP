<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAlerta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnNuevaPlaneacion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>